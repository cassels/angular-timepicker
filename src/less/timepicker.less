@import "elements.less";
@import "variables.less";

gc-timepicker {
	font-family: Helvetica Neue;
    font-size: @font-size;
	margin: 0 auto;
    float: left;
    clear: right;
    position: relative;
    .box-sizing(border-box);
    
	.gc-timepicker {
		background: @bg-color;
		color: @fg-color;
		position: absolute;
		z-index: 999;
		margin-top: 2px;
		width: @popup-width;
  	 	padding: @popup-padding;
  
		.box-shadow(0 0 0 1px rgba(0,0,0,.1) inset);
		.border-radius(3px, 3px, 3px, 3px);
	
		&-muted {
			color: @fg-color-muted;
		}
		
		&-header {
			font-size: @header-font-size;
			text-align: center;
			line-height: 2em;
			[class^="selected-"] {
				cursor: pointer;
			}
		}
		
		&-body {
			position: relative;
			width: @clock-width;
			height: @clock-width;
			margin: 7px auto;
			.inverse(background, @bg-color, 15%);
			.border-radius(50%, 50%, 50%, 50%);
			.hour,
			.min {
				display: block;
				overflow: visible;
				position: absolute;
				top: 50%; 
				left: 50%;
				width: 3em;
				height: 3em;
				margin: -1.5em;
				text-align: center;
				vertical-align: middle;
				line-height: 3em;
				.border-radius(50%, 50%, 50%, 50%);
				&:hover,
				&.selected {
					cursor: pointer;
					background: @bg-color;
				}
				&.text-sm {
					font-size: 0.8em;
				}
			}
			.generate-angles(360);
		}
	}
}

.generate-angles(@n, @i: 0) when (@i < @n) {
	.angle-md-@{i} {
		transform: rotate(unit(@i, deg)) translate((@clock-width/2) - 20px) rotate(unit(-@i, deg));
	}
	.angle-sm-@{i} {
		transform: rotate(unit(@i, deg)) translate((@clock-width/2) - 50px) rotate(unit(-@i, deg));
	}
	.generate-angles(@n, (@i + 30));
}
.inverse(@prop, @color, @percent) when (@inverse = true) {
	@{prop}: lighten(@color, @percent);
}
.inverse(@prop, @color, @percent) when (@inverse = false) {
	@{prop}: darken(@color, @percent);
}